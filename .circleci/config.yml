version: 2.1

workflows:
  main:
    jobs:
      - test
      - publish:
          requires:
            - test

orbs:
  node: circleci/node@1.1.4

executors:
  node12:
    docker:
      - image: circleci/node:12

commands:
  setup:
    steps:
      - checkout:
          path: ..
      - node/with-cache:
          cache-key: package-lock.json
          steps:
            - run: npm ci
      - run:
          name: Setup Git Author
          command: |
            git config user.name "$CIRCLE_USERNAME via CircleCI"
            git config user.email "circleci@example.com"

jobs:

  test:
    executor: node12
    working_directory: ~/project/trigger-pipeline
    steps:
      - setup

      - run:
          command: npm run prettier
          when: always

      - run:
          command: npm run typecheck
          when: always

      - run:
          name: npm test
          command: npm test -- --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-results
          when: always
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

      - run:
          command: npm run build
          when: always
      - run:
          name: show bundled action
          command: cat action.bundle.js
      - persist_to_workspace:
          root: .
          paths:
            - action.bundle.js
      - store_artifacts:
          path: action.bundle.js

  publish:
    executor: node12
    working_directory: ~/project/trigger-pipeline
    steps:
      - setup
      - attach_workspace:
          at: .
      - run: git add --force action.bundle.js
      - run: git commit -m "Build from $CIRCLE_BUILD_URL"
      - add_ssh_keys:
          fingerprints:
            - "67:b3:f8:fb:b1:ce:46:48:d6:18:f2:fc:56:40:a3:c5"
      - run:
          name: publish to git
          command: |
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              # Mutable Release Tag
              tag="v1"
              git tag --annotate --force --message "Release from $CIRCLE_BUILD_URL" $tag
              git push --delete origin refs/tags/$tag || true
              git push --force-with-lease origin $tag

              # Immutable Release Tag
              tag="v1-r$CIRCLE_BUILD_NUM"
              git tag --annotate --message "Release from $CIRCLE_BUILD_URL" $tag
              git push origin $tag
            else
              # Mutable Dev Tag
              tag="dev-$CIRCLE_BRANCH"
              git tag --annotate --force --message "Dev Build from $CIRCLE_BUILD_URL" $tag
              git push --delete origin refs/tags/$tag || true
              git push --force-with-lease origin $tag
            fi
